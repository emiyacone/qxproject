<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.UserDataMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.UserData">
    <id column="userid" jdbcType="INTEGER" property="userid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
  </resultMap>
  <resultMap id="newresult" type="com.example.demo.entity.UserData" extends="BaseResultMap">
    <collection property="roles" javaType="ArrayList" ofType="com.example.demo.entity.Tb_Role">
      <id column="roleid" jdbcType="INTEGER" property="roleid" />
      <result column="role_name" jdbcType="VARCHAR" property="roleName" />
      <result column="role_message" jdbcType="VARCHAR" property="roleMessage" />
    </collection>
  </resultMap>
  <sql id="Base_Column_List" >
    userid, username, password, gender, telephone, email
  </sql>
  <select id="findrolebyunameandpaw" parameterType="com.example.demo.entity.UserData" resultMap="newresult">
        select u.*,r.roleid,r.role_name,r.role_message from tb_userdata u left outer
        join user_contact uc on u.userid=uc.userid left outer join tb_role r on r.roleid=uc.roleid where
        u.username = #{username,jdbcType=VARCHAR} and u.password = #{password,jdbcType=VARCHAR}
  </select>

  <select id="findrolebyuserid" parameterType="java.lang.Integer" resultMap="newresult">
        select u.*,r.roleid,r.role_name,r.role_message from tb_userdata u left outer
        join user_contact uc on u.userid=uc.userid left outer join tb_role r on r.roleid=uc.roleid where
        u.userid=#{userid,jdbcType=INTEGER}
  </select>
  <select id="findallusers" resultMap="BaseResultMap">
     SELECT * FROM tb_userdata
  </select>
  <select id="selectusername" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from  tb_userdata
    where username = #{username,jdbcType=VARCHAR}
  </select>
  <select id="selectbyusername" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from  tb_userdata
    where username like "%"#{username,jdbcType=VARCHAR}"%"
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_userdata
    where userid = #{userid,jdbcType=INTEGER}
  </select>

  <select id="selectbyunameandpaw" parameterType="com.example.demo.entity.UserData" resultMap="BaseResultMap">
    select *
    from tb_userdata
    where username = #{username,jdbcType=VARCHAR} and password = #{password,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_userdata
    where userid = #{userid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.UserData">
    insert into tb_userdata (userid, username, password, 
      gender, telephone, email
      )
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{gender,jdbcType=INTEGER}, #{telephone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.UserData">
    insert into tb_userdata
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userid,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="telephone != null">
        telephone,
      </if>
      <if test="email != null">
        email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.UserData">
    update tb_userdata
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="telephone != null">
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
    </set>
    where userid = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.UserData">
    update tb_userdata
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      telephone = #{telephone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR}
    where userid = #{userid,jdbcType=INTEGER}
  </update>
</mapper>